//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("iLexStudio.IntercomServices", "ParentEntry", "BaseDictionary", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(iLexStudio.IntercomServices.Models.Tickets.BaseDictionary), "BaseDictionary1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(iLexStudio.IntercomServices.Models.Tickets.BaseDictionary))]

#endregion

namespace iLexStudio.IntercomServices.Models.Tickets
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class IntercomContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new IntercomContext object using the connection string found in the 'IntercomContext' section of the application configuration file.
        /// </summary>
        public IntercomContext() : base("name=IntercomContext", "IntercomContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IntercomContext object.
        /// </summary>
        public IntercomContext(string connectionString) : base(connectionString, "IntercomContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new IntercomContext object.
        /// </summary>
        public IntercomContext(EntityConnection connection) : base(connection, "IntercomContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ticket> Tickets
        {
            get
            {
                if ((_Tickets == null))
                {
                    _Tickets = base.CreateObjectSet<Ticket>("Tickets");
                }
                return _Tickets;
            }
        }
        private ObjectSet<Ticket> _Tickets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseDictionary> BaseDictionaries
        {
            get
            {
                if ((_BaseDictionaries == null))
                {
                    _BaseDictionaries = base.CreateObjectSet<BaseDictionary>("BaseDictionaries");
                }
                return _BaseDictionaries;
            }
        }
        private ObjectSet<BaseDictionary> _BaseDictionaries;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tickets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTickets(Ticket ticket)
        {
            base.AddObject("Tickets", ticket);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseDictionaries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseDictionaries(BaseDictionary baseDictionary)
        {
            base.AddObject("BaseDictionaries", baseDictionary);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="iLexStudio.IntercomServices", Name="BaseDictionary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Street))]
    [KnownTypeAttribute(typeof(TicketType))]
    public partial class BaseDictionary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseDictionary object.
        /// </summary>
        /// <param name="objectID">Initial value of the ObjectID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static BaseDictionary CreateBaseDictionary(global::System.Int32 objectID, global::System.String value, global::System.String description)
        {
            BaseDictionary baseDictionary = new BaseDictionary();
            baseDictionary.ObjectID = objectID;
            baseDictionary.Value = value;
            baseDictionary.Description = description;
            return baseDictionary;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                if (_ObjectID != value)
                {
                    OnObjectIDChanging(value);
                    ReportPropertyChanging("ObjectID");
                    _ObjectID = StructuralObject.SetValidValue(value, "ObjectID");
                    ReportPropertyChanged("ObjectID");
                    OnObjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ObjectID;
        partial void OnObjectIDChanging(global::System.Int32 value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("iLexStudio.IntercomServices", "ParentEntry", "BaseDictionary")]
        public BaseDictionary ParentDictionary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseDictionary>("iLexStudio.IntercomServices.ParentEntry", "BaseDictionary").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseDictionary>("iLexStudio.IntercomServices.ParentEntry", "BaseDictionary").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseDictionary> ParentDictionaryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseDictionary>("iLexStudio.IntercomServices.ParentEntry", "BaseDictionary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseDictionary>("iLexStudio.IntercomServices.ParentEntry", "BaseDictionary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="iLexStudio.IntercomServices", Name="Street")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Street : BaseDictionary
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Street object.
        /// </summary>
        /// <param name="objectID">Initial value of the ObjectID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Street CreateStreet(global::System.Int32 objectID, global::System.String value, global::System.String description)
        {
            Street street = new Street();
            street.ObjectID = objectID;
            street.Value = value;
            street.Description = description;
            return street;
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="iLexStudio.IntercomServices", Name="Ticket")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ticket : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ticket object.
        /// </summary>
        /// <param name="objectID">Initial value of the ObjectID property.</param>
        /// <param name="callerName">Initial value of the CallerName property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="buildingID">Initial value of the BuildingID property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="statusReason">Initial value of the StatusReason property.</param>
        /// <param name="status">Initial value of the Status property.</param>
        /// <param name="assignee">Initial value of the Assignee property.</param>
        public static Ticket CreateTicket(global::System.Int32 objectID, global::System.String callerName, global::System.String description, global::System.String buildingID, global::System.String phone, global::System.String email, global::System.String statusReason, TicketStatus status, global::System.Int32 assignee)
        {
            Ticket ticket = new Ticket();
            ticket.ObjectID = objectID;
            ticket.CallerName = callerName;
            ticket.Description = description;
            ticket.BuildingID = buildingID;
            ticket.Phone = phone;
            ticket.Email = email;
            ticket.StatusReason = statusReason;
            ticket.Status = status;
            ticket.Assignee = assignee;
            return ticket;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ObjectID
        {
            get
            {
                return _ObjectID;
            }
            set
            {
                if (_ObjectID != value)
                {
                    OnObjectIDChanging(value);
                    ReportPropertyChanging("ObjectID");
                    _ObjectID = StructuralObject.SetValidValue(value, "ObjectID");
                    ReportPropertyChanged("ObjectID");
                    OnObjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ObjectID;
        partial void OnObjectIDChanging(global::System.Int32 value);
        partial void OnObjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CallerName
        {
            get
            {
                return _CallerName;
            }
            set
            {
                OnCallerNameChanging(value);
                ReportPropertyChanging("CallerName");
                _CallerName = StructuralObject.SetValidValue(value, false, "CallerName");
                ReportPropertyChanged("CallerName");
                OnCallerNameChanged();
            }
        }
        private global::System.String _CallerName;
        partial void OnCallerNameChanging(global::System.String value);
        partial void OnCallerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BuildingID
        {
            get
            {
                return _BuildingID;
            }
            set
            {
                OnBuildingIDChanging(value);
                ReportPropertyChanging("BuildingID");
                _BuildingID = StructuralObject.SetValidValue(value, false, "BuildingID");
                ReportPropertyChanged("BuildingID");
                OnBuildingIDChanged();
            }
        }
        private global::System.String _BuildingID;
        partial void OnBuildingIDChanging(global::System.String value);
        partial void OnBuildingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StatusReason
        {
            get
            {
                return _StatusReason;
            }
            set
            {
                OnStatusReasonChanging(value);
                ReportPropertyChanging("StatusReason");
                _StatusReason = StructuralObject.SetValidValue(value, false, "StatusReason");
                ReportPropertyChanged("StatusReason");
                OnStatusReasonChanged();
            }
        }
        private global::System.String _StatusReason;
        partial void OnStatusReasonChanging(global::System.String value);
        partial void OnStatusReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public TicketStatus Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = (TicketStatus)StructuralObject.SetValidValue((int)value, "Status");
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private TicketStatus _Status;
        partial void OnStatusChanging(TicketStatus value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Assignee
        {
            get
            {
                return _Assignee;
            }
            set
            {
                OnAssigneeChanging(value);
                ReportPropertyChanging("Assignee");
                _Assignee = StructuralObject.SetValidValue(value, "Assignee");
                ReportPropertyChanged("Assignee");
                OnAssigneeChanged();
            }
        }
        private global::System.Int32 _Assignee;
        partial void OnAssigneeChanging(global::System.Int32 value);
        partial void OnAssigneeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="iLexStudio.IntercomServices", Name="TicketType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TicketType : BaseDictionary
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TicketType object.
        /// </summary>
        /// <param name="objectID">Initial value of the ObjectID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static TicketType CreateTicketType(global::System.Int32 objectID, global::System.String value, global::System.String description)
        {
            TicketType ticketType = new TicketType();
            ticketType.ObjectID = objectID;
            ticketType.Value = value;
            ticketType.Description = description;
            return ticketType;
        }

        #endregion

    }

    #endregion

    #region Enums
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEnumTypeAttribute(NamespaceName="iLexStudio.IntercomServices", Name="TicketStatus")]
    [DataContractAttribute()]
    [FlagsAttribute()]
    public enum TicketStatus : int
    {
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        New = 1,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Checked = 2,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Assigned = 4,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Completed = 8,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Rejected = 16,
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EnumMemberAttribute()]
        Closed = 32
    }

    #endregion

}
